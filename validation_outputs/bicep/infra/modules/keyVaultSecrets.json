{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.5.1644",
      "templateHash": "6894330896549180813"
    }
  },
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault where secrets will be stored."
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "sit",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, sit, prod)."
      }
    },
    "secrets": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "Optional secrets to create in Key Vault. Structure: { secretName: secretValue }\nExample:\n{\n  \"Synapse-SqlAdmin-Password\": \"dummy-password\",\n  \"Storage-DataLake-Key\": \"dummy-key\"\n}\n\nBest Practices for Secret Names:\n- Use service prefix: \"ServiceName-SecretType\"\n- Common types: Password, Key, ConnectionString, ApiKey\n- Use hyphens (-) for separators\n- Be consistent with casing\n\nExample secret names:\n- Synapse-SqlAdmin-Password\n- Storage-DataLake-Key\n- EventGrid-Topic-Key\n- Functions-StorageKey\n"
      }
    }
  },
  "resources": [
    {
      "copy": {
        "name": "keyVaultSecrets",
        "count": "[length(items(parameters('secrets')))]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), items(parameters('secrets'))[copyIndex()].key)]",
      "properties": {
        "value": "[items(parameters('secrets'))[copyIndex()].value]",
        "contentType": "[parameters('environment')]",
        "attributes": {
          "enabled": true
        }
      }
    }
  ],
  "outputs": {
    "keyVaultId": {
      "type": "string",
      "metadata": {
        "description": "Returns the Key Vault ID for reference"
      },
      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
    },
    "createdSecrets": {
      "type": "array",
      "metadata": {
        "description": "Returns a list of created secret names"
      },
      "copy": {
        "count": "[length(items(parameters('secrets')))]",
        "input": "[items(parameters('secrets'))[copyIndex()].key]"
      }
    }
  }
}